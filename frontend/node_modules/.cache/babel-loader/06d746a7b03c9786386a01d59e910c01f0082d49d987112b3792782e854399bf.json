{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noel\\\\Desktop\\\\Code\\\\Web\\\\bowling-simulator\\\\frontend\\\\src\\\\pages\\\\SimulationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SimulationPage.css';\nimport bowlingImage from '../images/bowling.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SimulationPage() {\n  _s();\n  const [frames, setFrames] = useState([]);\n  const [totalScore, setTotalScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentFrameIndex, setCurrentFrameIndex] = useState(0);\n\n  // On mount, fetch current game state (in case there's an existing in-progress game)\n  useEffect(() => {\n    fetchGameState();\n  }, []);\n  const fetchGameState = async () => {\n    const res = await fetch('http://localhost:3001/api/gameState');\n    const data = await res.json();\n    setFrames(data.frames);\n    setTotalScore(data.totalScore);\n    setGameOver(data.gameOver);\n    setCurrentFrameIndex(data.currentFrameIndex);\n  };\n  const handleSimulate = async () => {\n    const res = await fetch('http://localhost:3001/api/simulateRoll', {\n      method: 'POST'\n    });\n    const data = await res.json();\n    setFrames(data.frames);\n    setTotalScore(data.totalScore);\n    setGameOver(data.gameOver);\n    setCurrentFrameIndex(data.currentFrameIndex);\n  };\n  const handleSimulateGame = async () => {\n    console.log('Simulating game...');\n    const rest = await fetch('http://localhost:3001/api/simulateGame', {\n      method: 'POST'\n    });\n    const data = await rest.json();\n    setFrames(data.frames);\n    setTotalScore(data.totalScore);\n    setGameOver(data.gameOver);\n    setCurrentFrameIndex(data.currentFrameIndex);\n  };\n  const handleReset = async () => {\n    const res = await fetch('http://localhost:3001/api/resetGame', {\n      method: 'POST'\n    });\n    const data = await res.json();\n    setFrames(data.frames);\n    setTotalScore(data.totalScore);\n    setGameOver(data.gameOver);\n    setCurrentFrameIndex(data.currentFrameIndex);\n  };\n  const handleUndo = async () => {\n    if (isLoading) return;\n    setIsLoading(true);\n    try {\n      const res = await fetch('http://localhost:3001/api/undoRoll', {\n        method: 'POST'\n      });\n      const data = await res.json();\n      setFrames(data.frames);\n      setTotalScore(data.totalScore);\n      setGameOver(data.gameOver);\n      setCurrentFrameIndex(data.currentFrameIndex);\n    } catch (error) {\n      console.error(\"Error undoing roll:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Format roll display using bowling notation\n  const formatRoll = (frame, rollNum) => {\n    if (rollNum === 1) {\n      // First roll\n      if (frame.roll1 === 10) {\n        return 'X'; // Strike\n      } else if (frame.roll1 !== undefined) {\n        return frame.roll1 === 0 ? '-' : frame.roll1; // Show '-' for gutter balls\n      }\n      return '';\n    } else if (rollNum === 2) {\n      // Second roll\n      if (frame.roll1 === 10 && frame.roll2 === 10) {\n        return 'X'; // Strike in 10th frame\n      } else if (frame.roll1 !== undefined && frame.roll2 !== undefined && frame.roll1 + frame.roll2 === 10) {\n        return '/'; // Spare\n      } else if (frame.roll2 !== undefined) {\n        return frame.roll2 === 0 ? '-' : frame.roll2; // Show '-' for gutter balls\n      }\n      return '';\n    } else if (rollNum === 3) {\n      // Third roll (only in 10th frame)\n      if (frame.roll3 === 10) {\n        return 'X'; // Strike in bonus roll\n      } else if (frame.roll2 === 10 && frame.roll3 !== undefined && frame.roll3 + frame.roll2 === 10) {\n        return '/'; // Spare in bonus roll after strike\n      } else if (frame.roll3 !== undefined) {\n        return frame.roll3 === 0 ? '-' : frame.roll3; // Show '-' for gutter balls\n      }\n      return '';\n    }\n    return '';\n  };\n  console.log('Frames:', frames);\n  //console.log('Total Score:', totalScore);\n  //console.log('Game Over:', gameOver);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulation-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulation-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"bowling-score-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [[...Array(9)].map((_, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"2\",\n              children: i + 1\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"3\",\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: frames.map((frame, i) => {\n              // For frames 1â€“9, show roll1 and roll2\n              if (i < 9) {\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"frame-shot\",\n                    children: formatRoll(frame, 1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"frame-shot\",\n                    children: formatRoll(frame, 2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 23\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this);\n              }\n              // For frame 10, show roll1, roll2, roll3\n              else {\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"frame-shot\",\n                    children: formatRoll(frame, 1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"frame-shot\",\n                    children: formatRoll(frame, 2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"frame-shot\",\n                    children: formatRoll(frame, 3)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: frames.map((frame, i) => {\n              // Determine if the score for this frame should be displayed\n              const isFrameStarted = frame.roll1 !== undefined;\n              const isPreviousFrame = i < currentFrameIndex;\n              // Show score if:\n              // 1. It's a previous, completed frame OR\n              // 2. It's the current frame AND the first roll has been made OR\n              // 3. The game is over\n              const showScore = isPreviousFrame || i === currentFrameIndex && isFrameStarted || gameOver;\n              if (i < 9) {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"2\",\n                  className: \"frame-total\",\n                  children: showScore && frame.cumulativeScore !== undefined ? frame.cumulativeScore : ''\n                }, `score-${i}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this);\n              } else {\n                // 10th frame\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"3\",\n                  className: \"frame-total\",\n                  children: showScore && frame.cumulativeScore !== undefined ? frame.cumulativeScore : ''\n                }, `score-${i}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: bowlingImage,\n      alt: \"Bowling\",\n      className: \"bowling-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulation-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"play-button\",\n          onClick: handleSimulate,\n          disabled: gameOver,\n          children: \"Simulate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"play-button\",\n          onClick: handleSimulateGame,\n          disabled: gameOver,\n          children: \"Simulate\\xA0Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"undo-button\",\n          onClick: handleUndo,\n          disabled: isLoading,\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"reset-button\",\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(SimulationPage, \"TBd4KDLjWB1FiUne+rH03Jlbnpw=\");\n_c = SimulationPage;\nexport default SimulationPage;\nvar _c;\n$RefreshReg$(_c, \"SimulationPage\");","map":{"version":3,"names":["React","useState","useEffect","bowlingImage","jsxDEV","_jsxDEV","SimulationPage","_s","frames","setFrames","totalScore","setTotalScore","gameOver","setGameOver","isLoading","setIsLoading","currentFrameIndex","setCurrentFrameIndex","fetchGameState","res","fetch","data","json","handleSimulate","method","handleSimulateGame","console","log","rest","handleReset","handleUndo","error","formatRoll","frame","rollNum","roll1","undefined","roll2","roll3","className","children","Array","map","_","i","colSpan","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","isFrameStarted","isPreviousFrame","showScore","cumulativeScore","src","alt","type","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Noel/Desktop/Code/Web/bowling-simulator/frontend/src/pages/SimulationPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './SimulationPage.css';\r\nimport bowlingImage from '../images/bowling.jpg';\r\n\r\nfunction SimulationPage() {\r\n  const [frames, setFrames] = useState([]);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currentFrameIndex, setCurrentFrameIndex] = useState(0);\r\n\r\n  // On mount, fetch current game state (in case there's an existing in-progress game)\r\n  useEffect(() => {\r\n    fetchGameState();\r\n  }, []);\r\n\r\n  const fetchGameState = async () => {\r\n    const res = await fetch('http://localhost:3001/api/gameState');\r\n    const data = await res.json();\r\n    setFrames(data.frames);\r\n    setTotalScore(data.totalScore);\r\n    setGameOver(data.gameOver);\r\n    setCurrentFrameIndex(data.currentFrameIndex);\r\n  };\r\n\r\n  const handleSimulate = async () => {\r\n    const res = await fetch('http://localhost:3001/api/simulateRoll', {\r\n      method: 'POST',\r\n    });\r\n    const data = await res.json();\r\n    setFrames(data.frames);\r\n    setTotalScore(data.totalScore);\r\n    setGameOver(data.gameOver);\r\n    setCurrentFrameIndex(data.currentFrameIndex);\r\n  };\r\n\r\n  const handleSimulateGame = async () => {\r\n    console.log('Simulating game...');\r\n    const rest = await fetch('http://localhost:3001/api/simulateGame', {\r\n      method: 'POST',\r\n    });\r\n    const data = await rest.json();\r\n    setFrames(data.frames);\r\n    setTotalScore(data.totalScore);\r\n    setGameOver(data.gameOver);\r\n    setCurrentFrameIndex(data.currentFrameIndex);\r\n  };\r\n\r\n  const handleReset = async () => {\r\n    const res = await fetch('http://localhost:3001/api/resetGame', {\r\n      method: 'POST',\r\n    });\r\n    const data = await res.json();\r\n    setFrames(data.frames);\r\n    setTotalScore(data.totalScore);\r\n    setGameOver(data.gameOver);\r\n    setCurrentFrameIndex(data.currentFrameIndex);\r\n  };\r\n\r\n  const handleUndo = async () => {\r\n    if (isLoading) return;\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await fetch('http://localhost:3001/api/undoRoll', {\r\n        method: 'POST',\r\n      });\r\n      const data = await res.json();\r\n      setFrames(data.frames);\r\n      setTotalScore(data.totalScore);\r\n      setGameOver(data.gameOver);\r\n      setCurrentFrameIndex(data.currentFrameIndex);\r\n    } catch (error) {\r\n      console.error(\"Error undoing roll:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Format roll display using bowling notation\r\n  const formatRoll = (frame, rollNum) => {\r\n    if (rollNum === 1) {\r\n      // First roll\r\n      if (frame.roll1 === 10) {\r\n        return 'X'; // Strike\r\n      } else if (frame.roll1 !== undefined) {\r\n        return frame.roll1 === 0 ? '-' : frame.roll1; // Show '-' for gutter balls\r\n      }\r\n      return '';\r\n    } else if (rollNum === 2) {\r\n      // Second roll\r\n      if (frame.roll1 === 10 && frame.roll2 === 10) {\r\n        return 'X'; // Strike in 10th frame\r\n      } else if (frame.roll1 !== undefined && frame.roll2 !== undefined && frame.roll1 + frame.roll2 === 10) {\r\n        return '/'; // Spare\r\n      } else if (frame.roll2 !== undefined) {\r\n        return frame.roll2 === 0 ? '-' : frame.roll2; // Show '-' for gutter balls\r\n      }\r\n      return '';\r\n    } else if (rollNum === 3) {\r\n      // Third roll (only in 10th frame)\r\n      if (frame.roll3 === 10) {\r\n        return 'X'; // Strike in bonus roll\r\n      } else if (frame.roll2 === 10 && frame.roll3 !== undefined && frame.roll3 + frame.roll2 === 10) {\r\n        return '/'; // Spare in bonus roll after strike\r\n      } else if (frame.roll3 !== undefined) {\r\n        return frame.roll3 === 0 ? '-' : frame.roll3; // Show '-' for gutter balls\r\n      }\r\n      return '';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  console.log('Frames:', frames);\r\n  //console.log('Total Score:', totalScore);\r\n  //console.log('Game Over:', gameOver);\r\n\r\n  return (\r\n    <div className=\"simulation-page\">\r\n      <div className=\"simulation-container\">\r\n        <table className=\"bowling-score-table\">\r\n          <thead>\r\n            <tr>\r\n              {/* Frame headers: frames 1â€“9 each have 2 columns, frame 10 has 3 */}\r\n              {[...Array(9)].map((_, i) => (\r\n                <th key={i} colSpan=\"2\">{i + 1}</th>\r\n              ))}\r\n              <th colSpan=\"3\">10</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* First row: display the rolls */}\r\n            <tr>\r\n              {frames.map((frame, i) => {\r\n                // For frames 1â€“9, show roll1 and roll2\r\n                if (i < 9) {\r\n                  return (\r\n                    <React.Fragment key={i}>\r\n                      <td className=\"frame-shot\">\r\n                        {formatRoll(frame, 1)}\r\n                      </td>\r\n                      <td className=\"frame-shot\">\r\n                        {formatRoll(frame, 2)}\r\n                      </td>\r\n                    </React.Fragment>\r\n                  );\r\n                } \r\n                // For frame 10, show roll1, roll2, roll3\r\n                else {\r\n                  return (\r\n                    <React.Fragment key={i}>\r\n                      <td className=\"frame-shot\">\r\n                        {formatRoll(frame, 1)}\r\n                      </td>\r\n                      <td className=\"frame-shot\">\r\n                        {formatRoll(frame, 2)}\r\n                      </td>\r\n                      <td className=\"frame-shot\">\r\n                        {formatRoll(frame, 3)}\r\n                      </td>\r\n                    </React.Fragment>\r\n                  );\r\n                }\r\n              })}\r\n            </tr>\r\n\r\n            {/* Second row: display each frame's cumulative score */}\r\n            <tr>\r\n              {frames.map((frame, i) => {\r\n                 // Determine if the score for this frame should be displayed\r\n                 const isFrameStarted = frame.roll1 !== undefined;\r\n                 const isPreviousFrame = i < currentFrameIndex;\r\n                 // Show score if:\r\n                 // 1. It's a previous, completed frame OR\r\n                 // 2. It's the current frame AND the first roll has been made OR\r\n                 // 3. The game is over\r\n                 const showScore = isPreviousFrame || (i === currentFrameIndex && isFrameStarted) || gameOver;\r\n\r\n                if (i < 9) {\r\n                  return (\r\n                    <td\r\n                      key={`score-${i}`}\r\n                      colSpan=\"2\"\r\n                      className=\"frame-total\"\r\n                    >\r\n                      {showScore && frame.cumulativeScore !== undefined ? frame.cumulativeScore : ''}\r\n                    </td>\r\n                  );\r\n                } else {\r\n                  // 10th frame\r\n                  return (\r\n                    <td\r\n                      key={`score-${i}`}\r\n                      colSpan=\"3\"\r\n                      className=\"frame-total\"\r\n                    >\r\n                      {showScore && frame.cumulativeScore !== undefined ? frame.cumulativeScore : ''}\r\n                    </td>\r\n                  );\r\n                }\r\n              })}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <img src={bowlingImage} alt=\"Bowling\" className=\"bowling-image\" />\r\n\r\n      <div className=\"simulation-controls\">\r\n        <div className=\"button-row\">\r\n          <button type=\"button\" className=\"play-button\" onClick={handleSimulate} disabled={gameOver}>\r\n            Simulate\r\n          </button>\r\n          <button type=\"button\" className=\"play-button\" onClick={handleSimulateGame} disabled={gameOver}>\r\n            Simulate&nbsp;Game\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"button-row\">\r\n          <button type=\"button\" className=\"undo-button\" onClick={handleUndo} disabled={isLoading}>\r\n            Undo\r\n          </button>\r\n          <button type=\"button\" className=\"reset-button\" onClick={handleReset}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SimulationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}