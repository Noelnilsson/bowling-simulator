{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noel\\\\Desktop\\\\Code\\\\Web\\\\bowling-simulator\\\\frontend\\\\src\\\\components\\\\BowlingLane.js\";\nimport React from 'react';\nimport './BowlingLane.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BowlingLane = ({\n  pinsState,\n  selectedPins,\n  onTogglePin,\n  onRoll,\n  isDisabled\n}) => {\n  const pinNumbers = [7, 8, 9, 10, 4, 5, 6, 2, 3, 1]; // Traditional bowling pin arrangement\n\n  // Arrange pins in the triangle format (top: 7,8,9,10, middle: 4,5,6, etc.)\n  const getRowPins = rowIndex => {\n    if (rowIndex === 0) return pinNumbers.slice(0, 4); // First row: 7,8,9,10\n    if (rowIndex === 1) return pinNumbers.slice(4, 7); // Second row: 4,5,6\n    if (rowIndex === 2) return pinNumbers.slice(7, 9); // Third row: 2,3\n    if (rowIndex === 3) return pinNumbers.slice(9, 10); // Fourth row: 1\n    return [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bowling-lane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pins-container\",\n      children: [0, 1, 2, 3].map(rowIndex => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pin-row\",\n        children: getRowPins(rowIndex).map(pinNumber => {\n          const pinIndex = pinNumber - 1;\n          const isPinStanding = pinsState[pinIndex];\n          const isPinSelected = selectedPins.includes(pinIndex);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `pin ${isPinStanding ? 'standing' : 'knocked'} ${isPinSelected ? 'selected' : ''}`,\n            onClick: () => {\n              if (!isDisabled && isPinStanding) {\n                onTogglePin(pinIndex);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pin-circle\",\n              children: isPinStanding && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pin-number\",\n                children: pinNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this)\n          }, pinIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lane-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"roll-button\",\n        onClick: onRoll,\n        disabled: isDisabled || selectedPins.length === 0,\n        children: \"Roll Ball\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = BowlingLane;\nexport default BowlingLane;\nvar _c;\n$RefreshReg$(_c, \"BowlingLane\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BowlingLane","pinsState","selectedPins","onTogglePin","onRoll","isDisabled","pinNumbers","getRowPins","rowIndex","slice","className","children","map","pinNumber","pinIndex","isPinStanding","isPinSelected","includes","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/Noel/Desktop/Code/Web/bowling-simulator/frontend/src/components/BowlingLane.js"],"sourcesContent":["import React from 'react';\r\nimport './BowlingLane.css';\r\n\r\nconst BowlingLane = ({ pinsState, selectedPins, onTogglePin, onRoll, isDisabled }) => {\r\n  const pinNumbers = [7, 8, 9, 10, 4, 5, 6, 2, 3, 1]; // Traditional bowling pin arrangement\r\n  \r\n  // Arrange pins in the triangle format (top: 7,8,9,10, middle: 4,5,6, etc.)\r\n  const getRowPins = (rowIndex) => {\r\n    if (rowIndex === 0) return pinNumbers.slice(0, 4); // First row: 7,8,9,10\r\n    if (rowIndex === 1) return pinNumbers.slice(4, 7); // Second row: 4,5,6\r\n    if (rowIndex === 2) return pinNumbers.slice(7, 9); // Third row: 2,3\r\n    if (rowIndex === 3) return pinNumbers.slice(9, 10); // Fourth row: 1\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <div className=\"bowling-lane\">\r\n      <div className=\"pins-container\">\r\n        {[0, 1, 2, 3].map((rowIndex) => (\r\n          <div key={rowIndex} className=\"pin-row\">\r\n            {getRowPins(rowIndex).map((pinNumber) => {\r\n              const pinIndex = pinNumber - 1;\r\n              const isPinStanding = pinsState[pinIndex];\r\n              const isPinSelected = selectedPins.includes(pinIndex);\r\n              \r\n              return (\r\n                <div \r\n                  key={pinIndex} \r\n                  className={`pin ${isPinStanding ? 'standing' : 'knocked'} ${isPinSelected ? 'selected' : ''}`}\r\n                  onClick={() => {\r\n                    if (!isDisabled && isPinStanding) {\r\n                      onTogglePin(pinIndex);\r\n                    }\r\n                  }}\r\n                >\r\n                  <div className=\"pin-circle\">\r\n                    {isPinStanding && <span className=\"pin-number\">{pinNumber}</span>}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"lane-controls\">\r\n        <button \r\n          className=\"roll-button\"\r\n          onClick={onRoll}\r\n          disabled={isDisabled || selectedPins.length === 0}\r\n        >\r\n          Roll Ball\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BowlingLane; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}