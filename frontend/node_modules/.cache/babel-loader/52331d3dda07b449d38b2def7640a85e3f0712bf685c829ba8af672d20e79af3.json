{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noel\\\\Desktop\\\\Code\\\\Web\\\\bowling-simulator\\\\frontend\\\\src\\\\pages\\\\SimulationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SimulationPage.css';\nimport BowlingLane from '../components/BowlingLane';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SimulationPage() {\n  _s();\n  const [frames, setFrames] = useState([]);\n  const [totalScore, setTotalScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentFrameIndex, setCurrentFrameIndex] = useState(0);\n  const [isInteractive, setIsInteractive] = useState(false);\n  const [pinsState, setPinsState] = useState(Array(10).fill(true));\n  const [selectedPins, setSelectedPins] = useState([]);\n\n  // On mount, fetch current game state (in case there's an existing in-progress game)\n  useEffect(() => {\n    fetchGameState();\n  }, []);\n  const fetchGameState = async () => {\n    const res = await fetch('http://localhost:3001/api/gameState');\n    const data = await res.json();\n    setFrames(data.frames);\n    setTotalScore(data.totalScore);\n    setGameOver(data.gameOver);\n    setCurrentFrameIndex(data.currentFrameIndex);\n\n    // Handle interactive mode state\n    if (data.pinsState) {\n      setPinsState(data.pinsState);\n      setSelectedPins(data.selectedPins || []);\n    }\n  };\n  const handleSimulate = async () => {\n    const res = await fetch('http://localhost:3001/api/simulateRoll', {\n      method: 'POST'\n    });\n    const data = await res.json();\n    setFrames(data.frames);\n    setTotalScore(data.totalScore);\n    setGameOver(data.gameOver);\n    setCurrentFrameIndex(data.currentFrameIndex);\n\n    // Update pins state for interactive mode\n    if (data.pinsState) {\n      setPinsState(data.pinsState);\n      setSelectedPins(data.selectedPins || []);\n    }\n  };\n  const handleSimulateGame = async () => {\n    console.log('Simulating game...');\n    const rest = await fetch('http://localhost:3001/api/simulateGame', {\n      method: 'POST'\n    });\n    const data = await rest.json();\n    setFrames(data.frames);\n    setTotalScore(data.totalScore);\n    setGameOver(data.gameOver);\n    setCurrentFrameIndex(data.currentFrameIndex);\n\n    // Update pins state for interactive mode\n    if (data.pinsState) {\n      setPinsState(data.pinsState);\n      setSelectedPins(data.selectedPins || []);\n    }\n  };\n  const handleReset = async () => {\n    const res = await fetch('http://localhost:3001/api/resetGame', {\n      method: 'POST'\n    });\n    const data = await res.json();\n    setFrames(data.frames);\n    setTotalScore(data.totalScore);\n    setGameOver(data.gameOver);\n    setCurrentFrameIndex(data.currentFrameIndex);\n\n    // Update pins state for interactive mode\n    if (data.pinsState) {\n      setPinsState(data.pinsState);\n      setSelectedPins(data.selectedPins || []);\n    }\n  };\n  const handleUndo = async () => {\n    if (isLoading) return;\n    setIsLoading(true);\n    try {\n      const res = await fetch('http://localhost:3001/api/undoRoll', {\n        method: 'POST'\n      });\n      const data = await res.json();\n      setFrames(data.frames);\n      setTotalScore(data.totalScore);\n      setGameOver(data.gameOver);\n      setCurrentFrameIndex(data.currentFrameIndex);\n\n      // Update pins state for interactive mode\n      if (data.pinsState) {\n        setPinsState(data.pinsState);\n        setSelectedPins(data.selectedPins || []);\n      }\n    } catch (error) {\n      console.error(\"Error undoing roll:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Toggle between simulation and interactive mode\n  const toggleMode = async () => {\n    try {\n      const newMode = isInteractive ? 'simulation' : 'interactive';\n      const res = await fetch('http://localhost:3001/api/setMode', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          mode: newMode\n        })\n      });\n      const data = await res.json();\n      if (data.success) {\n        setIsInteractive(!isInteractive);\n\n        // Update game state\n        if (data.gameState) {\n          setFrames(data.gameState.frames);\n          setTotalScore(data.gameState.totalScore);\n          setGameOver(data.gameState.gameOver);\n          setCurrentFrameIndex(data.gameState.currentFrameIndex);\n\n          // Update pins state for interactive mode\n          if (data.gameState.pinsState) {\n            setPinsState(data.gameState.pinsState);\n            setSelectedPins(data.gameState.selectedPins || []);\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Error toggling game mode:\", error);\n    }\n  };\n\n  // Handle pin toggle in interactive mode\n  const handleTogglePin = async pinIndex => {\n    if (!isInteractive || gameOver) return;\n    try {\n      const res = await fetch('http://localhost:3001/api/togglePin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pinIndex\n        })\n      });\n      const data = await res.json();\n\n      // Update game state including pins\n      setFrames(data.frames);\n      setTotalScore(data.totalScore);\n      setGameOver(data.gameOver);\n      setCurrentFrameIndex(data.currentFrameIndex);\n      setPinsState(data.pinsState);\n      setSelectedPins(data.selectedPins);\n    } catch (error) {\n      console.error(\"Error toggling pin:\", error);\n    }\n  };\n\n  // Format roll display using bowling notation\n  const formatRoll = (frame, rollNum) => {\n    if (rollNum === 1) {\n      // First roll\n      if (frame.roll1 === 10) {\n        return 'X'; // Strike\n      } else if (frame.roll1 !== undefined) {\n        return frame.roll1 === 0 ? '-' : frame.roll1; // Show '-' for gutter balls\n      }\n      return '';\n    } else if (rollNum === 2) {\n      // Second roll\n      if (frame.roll1 === 10 && frame.roll2 === 10) {\n        return 'X'; // Strike in 10th frame\n      } else if (frame.roll1 !== undefined && frame.roll2 !== undefined && frame.roll1 + frame.roll2 === 10) {\n        return '/'; // Spare\n      } else if (frame.roll2 !== undefined) {\n        return frame.roll2 === 0 ? '-' : frame.roll2; // Show '-' for gutter balls\n      }\n      return '';\n    } else if (rollNum === 3) {\n      // Third roll (only in 10th frame)\n      if (frame.roll3 === 10) {\n        return 'X'; // Strike in bonus roll\n      } else if (frame.roll2 === 10 && frame.roll3 !== undefined && frame.roll3 + frame.roll2 === 10) {\n        return '/'; // Spare in bonus roll after strike\n      } else if (frame.roll3 !== undefined) {\n        return frame.roll3 === 0 ? '-' : frame.roll3; // Show '-' for gutter balls\n      }\n      return '';\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulation-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulation-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"bowling-score-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [[...Array(9)].map((_, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"2\",\n              children: i + 1\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"3\",\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: frames.map((frame, i) => {\n              // For frames 1â€“9, show roll1 and roll2\n              if (i < 9) {\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"frame-shot\",\n                    children: formatRoll(frame, 1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"frame-shot\",\n                    children: formatRoll(frame, 2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 23\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this);\n              }\n              // For frame 10, show roll1, roll2, roll3\n              else {\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"frame-shot\",\n                    children: formatRoll(frame, 1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"frame-shot\",\n                    children: formatRoll(frame, 2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"frame-shot\",\n                    children: formatRoll(frame, 3)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 23\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: frames.map((frame, i) => {\n              // Determine if the score for this frame should be displayed\n              const isFrameStarted = frame.roll1 !== undefined;\n              const isPreviousFrame = i < currentFrameIndex;\n              // Show score if:\n              // 1. It's a previous, completed frame OR\n              // 2. It's the current frame AND the first roll has been made OR\n              // 3. The game is over\n              const showScore = isPreviousFrame || i === currentFrameIndex && isFrameStarted || gameOver;\n              if (i < 9) {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"2\",\n                  className: \"frame-total\",\n                  children: showScore && frame.cumulativeScore !== undefined ? frame.cumulativeScore : ''\n                }, `score-${i}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this);\n              } else {\n                // 10th frame\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"3\",\n                  className: \"frame-total\",\n                  children: showScore && frame.cumulativeScore !== undefined ? frame.cumulativeScore : ''\n                }, `score-${i}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bowling-game-container\",\n      children: isInteractive ? /*#__PURE__*/_jsxDEV(BowlingLane, {\n        pinsState: pinsState,\n        selectedPins: selectedPins,\n        onTogglePin: handleTogglePin,\n        onRoll: handlePlayerRoll,\n        isDisabled: gameOver\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interactive-prompt\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click \\\"Play\\\" to enter interactive bowling mode!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulation-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `play-button ${isInteractive ? 'active' : ''}`,\n          onClick: toggleMode,\n          children: isInteractive ? 'Simulation Mode' : 'Play'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"play-button\",\n          onClick: handleSimulate,\n          disabled: gameOver,\n          children: \"Simulate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"play-button\",\n          onClick: handleSimulateGame,\n          disabled: gameOver,\n          children: \"Simulate\\xA0Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"undo-button\",\n          onClick: handleUndo,\n          disabled: isLoading,\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"reset-button\",\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(SimulationPage, \"VPMoPZuhk56W8qhx5/UYuk5YREw=\");\n_c = SimulationPage;\nexport default SimulationPage;\nvar _c;\n$RefreshReg$(_c, \"SimulationPage\");","map":{"version":3,"names":["React","useState","useEffect","BowlingLane","jsxDEV","_jsxDEV","SimulationPage","_s","frames","setFrames","totalScore","setTotalScore","gameOver","setGameOver","isLoading","setIsLoading","currentFrameIndex","setCurrentFrameIndex","isInteractive","setIsInteractive","pinsState","setPinsState","Array","fill","selectedPins","setSelectedPins","fetchGameState","res","fetch","data","json","handleSimulate","method","handleSimulateGame","console","log","rest","handleReset","handleUndo","error","toggleMode","newMode","headers","body","JSON","stringify","mode","success","gameState","handleTogglePin","pinIndex","formatRoll","frame","rollNum","roll1","undefined","roll2","roll3","className","children","map","_","i","colSpan","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","isFrameStarted","isPreviousFrame","showScore","cumulativeScore","onTogglePin","onRoll","handlePlayerRoll","isDisabled","type","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Noel/Desktop/Code/Web/bowling-simulator/frontend/src/pages/SimulationPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './SimulationPage.css';\r\nimport BowlingLane from '../components/BowlingLane';\r\n\r\nfunction SimulationPage() {\r\n  const [frames, setFrames] = useState([]);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currentFrameIndex, setCurrentFrameIndex] = useState(0);\r\n  const [isInteractive, setIsInteractive] = useState(false);\r\n  const [pinsState, setPinsState] = useState(Array(10).fill(true));\r\n  const [selectedPins, setSelectedPins] = useState([]);\r\n\r\n  // On mount, fetch current game state (in case there's an existing in-progress game)\r\n  useEffect(() => {\r\n    fetchGameState();\r\n  }, []);\r\n\r\n  const fetchGameState = async () => {\r\n    const res = await fetch('http://localhost:3001/api/gameState');\r\n    const data = await res.json();\r\n    setFrames(data.frames);\r\n    setTotalScore(data.totalScore);\r\n    setGameOver(data.gameOver);\r\n    setCurrentFrameIndex(data.currentFrameIndex);\r\n    \r\n    // Handle interactive mode state\r\n    if (data.pinsState) {\r\n      setPinsState(data.pinsState);\r\n      setSelectedPins(data.selectedPins || []);\r\n    }\r\n  };\r\n\r\n  const handleSimulate = async () => {\r\n    const res = await fetch('http://localhost:3001/api/simulateRoll', {\r\n      method: 'POST',\r\n    });\r\n    const data = await res.json();\r\n    setFrames(data.frames);\r\n    setTotalScore(data.totalScore);\r\n    setGameOver(data.gameOver);\r\n    setCurrentFrameIndex(data.currentFrameIndex);\r\n    \r\n    // Update pins state for interactive mode\r\n    if (data.pinsState) {\r\n      setPinsState(data.pinsState);\r\n      setSelectedPins(data.selectedPins || []);\r\n    }\r\n  };\r\n\r\n  const handleSimulateGame = async () => {\r\n    console.log('Simulating game...');\r\n    const rest = await fetch('http://localhost:3001/api/simulateGame', {\r\n      method: 'POST',\r\n    });\r\n    const data = await rest.json();\r\n    setFrames(data.frames);\r\n    setTotalScore(data.totalScore);\r\n    setGameOver(data.gameOver);\r\n    setCurrentFrameIndex(data.currentFrameIndex);\r\n    \r\n    // Update pins state for interactive mode\r\n    if (data.pinsState) {\r\n      setPinsState(data.pinsState);\r\n      setSelectedPins(data.selectedPins || []);\r\n    }\r\n  };\r\n\r\n  const handleReset = async () => {\r\n    const res = await fetch('http://localhost:3001/api/resetGame', {\r\n      method: 'POST',\r\n    });\r\n    const data = await res.json();\r\n    setFrames(data.frames);\r\n    setTotalScore(data.totalScore);\r\n    setGameOver(data.gameOver);\r\n    setCurrentFrameIndex(data.currentFrameIndex);\r\n    \r\n    // Update pins state for interactive mode\r\n    if (data.pinsState) {\r\n      setPinsState(data.pinsState);\r\n      setSelectedPins(data.selectedPins || []);\r\n    }\r\n  };\r\n\r\n  const handleUndo = async () => {\r\n    if (isLoading) return;\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await fetch('http://localhost:3001/api/undoRoll', {\r\n        method: 'POST',\r\n      });\r\n      const data = await res.json();\r\n      setFrames(data.frames);\r\n      setTotalScore(data.totalScore);\r\n      setGameOver(data.gameOver);\r\n      setCurrentFrameIndex(data.currentFrameIndex);\r\n      \r\n      // Update pins state for interactive mode\r\n      if (data.pinsState) {\r\n        setPinsState(data.pinsState);\r\n        setSelectedPins(data.selectedPins || []);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error undoing roll:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Toggle between simulation and interactive mode\r\n  const toggleMode = async () => {\r\n    try {\r\n      const newMode = isInteractive ? 'simulation' : 'interactive';\r\n      const res = await fetch('http://localhost:3001/api/setMode', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ mode: newMode }),\r\n      });\r\n      const data = await res.json();\r\n      \r\n      if (data.success) {\r\n        setIsInteractive(!isInteractive);\r\n        \r\n        // Update game state\r\n        if (data.gameState) {\r\n          setFrames(data.gameState.frames);\r\n          setTotalScore(data.gameState.totalScore);\r\n          setGameOver(data.gameState.gameOver);\r\n          setCurrentFrameIndex(data.gameState.currentFrameIndex);\r\n          \r\n          // Update pins state for interactive mode\r\n          if (data.gameState.pinsState) {\r\n            setPinsState(data.gameState.pinsState);\r\n            setSelectedPins(data.gameState.selectedPins || []);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error toggling game mode:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle pin toggle in interactive mode\r\n  const handleTogglePin = async (pinIndex) => {\r\n    if (!isInteractive || gameOver) return;\r\n    \r\n    try {\r\n      const res = await fetch('http://localhost:3001/api/togglePin', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ pinIndex }),\r\n      });\r\n      const data = await res.json();\r\n      \r\n      // Update game state including pins\r\n      setFrames(data.frames);\r\n      setTotalScore(data.totalScore);\r\n      setGameOver(data.gameOver);\r\n      setCurrentFrameIndex(data.currentFrameIndex);\r\n      setPinsState(data.pinsState);\r\n      setSelectedPins(data.selectedPins);\r\n    } catch (error) {\r\n      console.error(\"Error toggling pin:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  // Format roll display using bowling notation\r\n  const formatRoll = (frame, rollNum) => {\r\n    if (rollNum === 1) {\r\n      // First roll\r\n      if (frame.roll1 === 10) {\r\n        return 'X'; // Strike\r\n      } else if (frame.roll1 !== undefined) {\r\n        return frame.roll1 === 0 ? '-' : frame.roll1; // Show '-' for gutter balls\r\n      }\r\n      return '';\r\n    } else if (rollNum === 2) {\r\n      // Second roll\r\n      if (frame.roll1 === 10 && frame.roll2 === 10) {\r\n        return 'X'; // Strike in 10th frame\r\n      } else if (frame.roll1 !== undefined && frame.roll2 !== undefined && frame.roll1 + frame.roll2 === 10) {\r\n        return '/'; // Spare\r\n      } else if (frame.roll2 !== undefined) {\r\n        return frame.roll2 === 0 ? '-' : frame.roll2; // Show '-' for gutter balls\r\n      }\r\n      return '';\r\n    } else if (rollNum === 3) {\r\n      // Third roll (only in 10th frame)\r\n      if (frame.roll3 === 10) {\r\n        return 'X'; // Strike in bonus roll\r\n      } else if (frame.roll2 === 10 && frame.roll3 !== undefined && frame.roll3 + frame.roll2 === 10) {\r\n        return '/'; // Spare in bonus roll after strike\r\n      } else if (frame.roll3 !== undefined) {\r\n        return frame.roll3 === 0 ? '-' : frame.roll3; // Show '-' for gutter balls\r\n      }\r\n      return '';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div className=\"simulation-page\">\r\n      <div className=\"simulation-container\">\r\n        <table className=\"bowling-score-table\">\r\n          <thead>\r\n            <tr>\r\n              {/* Frame headers: frames 1â€“9 each have 2 columns, frame 10 has 3 */}\r\n              {[...Array(9)].map((_, i) => (\r\n                <th key={i} colSpan=\"2\">{i + 1}</th>\r\n              ))}\r\n              <th colSpan=\"3\">10</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* First row: display the rolls */}\r\n            <tr>\r\n              {frames.map((frame, i) => {\r\n                // For frames 1â€“9, show roll1 and roll2\r\n                if (i < 9) {\r\n                  return (\r\n                    <React.Fragment key={i}>\r\n                      <td className=\"frame-shot\">\r\n                        {formatRoll(frame, 1)}\r\n                      </td>\r\n                      <td className=\"frame-shot\">\r\n                        {formatRoll(frame, 2)}\r\n                      </td>\r\n                    </React.Fragment>\r\n                  );\r\n                } \r\n                // For frame 10, show roll1, roll2, roll3\r\n                else {\r\n                  return (\r\n                    <React.Fragment key={i}>\r\n                      <td className=\"frame-shot\">\r\n                        {formatRoll(frame, 1)}\r\n                      </td>\r\n                      <td className=\"frame-shot\">\r\n                        {formatRoll(frame, 2)}\r\n                      </td>\r\n                      <td className=\"frame-shot\">\r\n                        {formatRoll(frame, 3)}\r\n                      </td>\r\n                    </React.Fragment>\r\n                  );\r\n                }\r\n              })}\r\n            </tr>\r\n\r\n            {/* Second row: display each frame's cumulative score */}\r\n            <tr>\r\n              {frames.map((frame, i) => {\r\n                 // Determine if the score for this frame should be displayed\r\n                 const isFrameStarted = frame.roll1 !== undefined;\r\n                 const isPreviousFrame = i < currentFrameIndex;\r\n                 // Show score if:\r\n                 // 1. It's a previous, completed frame OR\r\n                 // 2. It's the current frame AND the first roll has been made OR\r\n                 // 3. The game is over\r\n                 const showScore = isPreviousFrame || (i === currentFrameIndex && isFrameStarted) || gameOver;\r\n\r\n                if (i < 9) {\r\n                  return (\r\n                    <td\r\n                      key={`score-${i}`}\r\n                      colSpan=\"2\"\r\n                      className=\"frame-total\"\r\n                    >\r\n                      {showScore && frame.cumulativeScore !== undefined ? frame.cumulativeScore : ''}\r\n                    </td>\r\n                  );\r\n                } else {\r\n                  // 10th frame\r\n                  return (\r\n                    <td\r\n                      key={`score-${i}`}\r\n                      colSpan=\"3\"\r\n                      className=\"frame-total\"\r\n                    >\r\n                      {showScore && frame.cumulativeScore !== undefined ? frame.cumulativeScore : ''}\r\n                    </td>\r\n                  );\r\n                }\r\n              })}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Replace static image with interactive bowling lane component */}\r\n      <div className=\"bowling-game-container\">\r\n        {isInteractive ? (\r\n          <BowlingLane \r\n            pinsState={pinsState}\r\n            selectedPins={selectedPins}\r\n            onTogglePin={handleTogglePin}\r\n            onRoll={handlePlayerRoll}\r\n            isDisabled={gameOver}\r\n          />\r\n        ) : (\r\n          <div className=\"interactive-prompt\">\r\n            <p>Click \"Play\" to enter interactive bowling mode!</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"simulation-controls\">\r\n        <div className=\"button-row\">\r\n          <button \r\n            type=\"button\" \r\n            className={`play-button ${isInteractive ? 'active' : ''}`} \r\n            onClick={toggleMode}\r\n          >\r\n            {isInteractive ? 'Simulation Mode' : 'Play'}\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            className=\"play-button\" \r\n            onClick={handleSimulate} \r\n            disabled={gameOver}\r\n          >\r\n            Simulate\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            className=\"play-button\" \r\n            onClick={handleSimulateGame} \r\n            disabled={gameOver}\r\n          >\r\n            Simulate&nbsp;Game\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"button-row\">\r\n          <button \r\n            type=\"button\" \r\n            className=\"undo-button\" \r\n            onClick={handleUndo} \r\n            disabled={isLoading}\r\n          >\r\n            Undo\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            className=\"reset-button\" \r\n            onClick={handleReset}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SimulationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}